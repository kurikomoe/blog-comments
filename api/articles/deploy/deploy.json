{"title":"","excerpt":"","main":"// _script/upload.js\n\nconst COS = require('cos-nodejs-sdk-v5');\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst cos = new COS({\n  SecretId: 'AKID20h6G9kdU6bJYYTlxsZzDDYfU3LMxh0N',\n  SecretKey: 'NQDiz1waIrBG4cu0usmW2JL7k7MMK1Se',\n});\n\n// 读取 dist 下的文件结构\nconst list = glob.sync(path.join(__dirname, '../public/**/**'));\nlist.forEach((file) => {\n  if (fs.statSync(file).isDirectory()) {\n    return;\n  }\n  const fileName = file.split('/public/')[1];\n  // 拼接 路径 + 文件\n  const key = `${fileName}`;\n  // 逐个上传\n  put(file, key);\n});\n\nfunction put(file, key) {\n  cos.putObject({\n    Bucket: 'kurikomoe-1300672427', /* 必须 */\n    Region: 'ap-beijing', /* 必须 */\n    Key: key, /* 必须 */\n    StorageClass: 'STANDARD',\n    Body: fs.createReadStream(file), // 上传文件对象\n    onProgress(progressData) {\n      console.log(key, ':', JSON.stringify(progressData));\n    },\n  }, (err, data) => {\n    console.info(err || `${file} ${data.status} Done`);\n  });\n}\n","render_content":"<p>// _script/upload.js</p>\n<p>const COS = require('cos-nodejs-sdk-v5');\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');</p>\n<p>const cos = new COS({\nSecretId: 'AKID20h6G9kdU6bJYYTlxsZzDDYfU3LMxh0N',\nSecretKey: 'NQDiz1waIrBG4cu0usmW2JL7k7MMK1Se',\n});</p>\n<p>// 读取 dist 下的文件结构\nconst list = glob.sync(path.join(__dirname, '../public/<strong>/</strong>'));\nlist.forEach((file) =&gt; {\nif (fs.statSync(file).isDirectory()) {\nreturn;\n}\nconst fileName = file.split('/public/')[1];\n// 拼接 路径 + 文件\nconst key = <code>${fileName}</code>;\n// 逐个上传\nput(file, key);\n});</p>\n<p>function put(file, key) {\ncos.putObject({\nBucket: 'kurikomoe-1300672427', /* 必须 <em>/\nRegion: 'ap-beijing', /</em> 必须 <em>/\nKey: key, /</em> 必须 */\nStorageClass: 'STANDARD',\nBody: fs.createReadStream(file), // 上传文件对象\nonProgress(progressData) {\nconsole.log(key, ':', JSON.stringify(progressData));\n},\n}, (err, data) =&gt; {\n<a href=\"http://console.info\" target=\"_blank\" rel=\"noopener\">console.info</a>(err || <code>${file} ${data.status} Done</code>);\n});\n}</p>\n","toc":[],"slug":"deploy/deploy","published":true,"date":"2021-02-16T08:42:23.583Z","updated":"2021-02-16T08:42:23.583Z","photos":[],"link":"","content":"// _script/upload.js\n\nconst COS = require('cos-nodejs-sdk-v5');\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst cos = new COS({\n  SecretId: 'AKID20h6G9kdU6bJYYTlxsZzDDYfU3LMxh0N',\n  SecretKey: 'NQDiz1waIrBG4cu0usmW2JL7k7MMK1Se',\n});\n\n// 读取 dist 下的文件结构\nconst list = glob.sync(path.join(__dirname, '../public/**/**'));\nlist.forEach((file) => {\n  if (fs.statSync(file).isDirectory()) {\n    return;\n  }\n  const fileName = file.split('/public/')[1];\n  // 拼接 路径 + 文件\n  const key = `${fileName}`;\n  // 逐个上传\n  put(file, key);\n});\n\nfunction put(file, key) {\n  cos.putObject({\n    Bucket: 'kurikomoe-1300672427', /* 必须 */\n    Region: 'ap-beijing', /* 必须 */\n    Key: key, /* 必须 */\n    StorageClass: 'STANDARD',\n    Body: fs.createReadStream(file), // 上传文件对象\n    onProgress(progressData) {\n      console.log(key, ':', JSON.stringify(progressData));\n    },\n  }, (err, data) => {\n    console.info(err || `${file} ${data.status} Done`);\n  });\n}\n","path":"2021/02/16/deploy/deploy/","permalink":"https://kuriko.moe/2021/02/16/deploy/deploy/","api_path":"api/articles/deploy/deploy.json","keywords":null,"cover":null,"categories":[],"tags":[]}